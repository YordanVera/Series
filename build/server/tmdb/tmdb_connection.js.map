{"version":3,"sources":["../tmdb/tmdb_connection.ts"],"names":[],"mappings":"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","file":"tmdb_connection.js","sourcesContent":["/// <reference path=\"../../typings/index.d.ts\"/>\r\nimport { tmdb_session } from './tmdn_session';\r\nimport { Itmdb_connection } from './Itmdb_connection';\r\nimport { config_tmdb } from '../config/config_tmdb';\r\nimport * as request from 'request';\r\nimport * as Rx from \"rxjs/Rx\";\r\n\r\nexport class tmdb_connection   {\r\n    private url_request_token   : 'https://api.themoviedb.org/3/authentication/token/new';\r\n    private url_validate_token  : 'https://api.themoviedb.org/3/authentication/token/validate_with_login';\r\n    private url_create_session  : 'https://api.themoviedb.org/3/authentication/session/new';\r\n    private session             : tmdb_session;\r\n    private status              : string = 'disconnected';\r\n    private subject             : any;\r\n    private public_subject      : any;\r\n\r\n    constructor(){\r\n        this.subject = new Rx.Subject();\r\n        this.public_subject = new Rx.Subject();\r\n        if(this.status === 'disconnected') this.connect_tmdb();\r\n    }\r\n    public getSession(): {success:boolean,data:tmdb_session,subject:any}{\r\n        if(this.status === 'connected')\r\n            return {success: true, data: this.session, subject: null};\r\n        else    \r\n            return {success: false, data: null,subject: this.public_subject};        \r\n    }\r\n    public getStatus(){\r\n        return this.status;\r\n    }\r\n    private connect_tmdb(){\r\n        this.session = new tmdb_session;\r\n        this.status = 'connecting';\r\n        this.subject.subscribe(\r\n            x   => {\r\n                if(typeof this.session.token !== 'undefined' && this.session.token_validated !== true){\r\n                    this.Validate_Token();\r\n                } \r\n                if(this.session.token_validated === true && typeof this.session.session_id === 'undefined'){\r\n                     this.Create_session();\r\n                }\r\n            },\r\n            e   =>  {\r\n                //error handle\r\n                console.log(e);\r\n            },\r\n            ()  => {\r\n                this.status = 'connected';\r\n                this.public_subject.next(this.session);\r\n            }\r\n        );\r\n        this.Create_Request_Token();\r\n    }\r\n    private Create_Request_Token (){\r\n            request(this.Create_query(\r\n                'https://api.themoviedb.org/3/authentication/token/new',\r\n                {api_key: config_tmdb.key}\r\n            ), (error, response, body)=> {\r\n                if(error){ \r\n                    throw new Error(error);\r\n                }\r\n                this.session.token = body.request_token;\r\n                this.session.token_validated = false;\r\n                this.subject.next(this.session.token);\r\n            });\r\n    }\r\n    private Validate_Token(){\r\n            request(this.Create_query(\r\n                'https://api.themoviedb.org/3/authentication/token/validate_with_login',\r\n                {   request_token   : this.session.token,\r\n                    password        : config_tmdb.password,\r\n                    username        : config_tmdb.username,\r\n                    api_key         : config_tmdb.key },\r\n            ), (error, response, body)=> {\r\n                if(error){ \r\n                    throw new Error(error);\r\n                }\r\n                this.session.token_validated = true;\r\n                this.subject.next();\r\n            });\r\n    }\r\n    private Create_session(){\r\n        request(this.Create_query(\r\n                'https://api.themoviedb.org/3/authentication/session/new',\r\n                {   request_token   : this.session.token,\r\n                    api_key         : config_tmdb.key },\r\n            ), (error, response, body)=> {\r\n                if(error){ \r\n                    throw new Error(error);\r\n                }\r\n                this.session.session_id = body.session_id;\r\n                this.subject.complete();\r\n                this.subject.unsubscribe();\r\n            });\r\n    }\r\n    private Create_query(url: string, qs: any, method?: string, headers?: any, body?: any, json?: boolean){\r\n        return {\r\n            method  : (typeof method === 'undefined') ? 'GET':method,\r\n            url     : (typeof url === 'undefined') ? '':url,\r\n            qs      : (typeof qs === 'undefined') ? '':qs,\r\n            headers : (typeof headers === 'undefined') ?  {'content-type': 'application/json'} : headers,\r\n            body    : (typeof body === 'undefined') ? {} : body,\r\n            json    : (typeof json === 'undefined') ? true : false \r\n        }\r\n    }\r\n}"]}