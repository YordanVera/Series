{"version":3,"sources":["../../source/server/router/routes/status/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as express         from \"express\";\r\nimport * as mysql           from 'mysql';\r\nimport * as _               from 'lodash';\r\nimport { config_db }        from '../../../config/config_db';\r\n\r\nexport class status_routes {\r\n    private _app            : express.Express;\r\n    private _pool           : any;\r\n\r\n    constructor(app){\r\n        this._app           = app;\r\n        this._pool          = mysql.createPool(config_db);\r\n        this.setRoutes();\r\n    }\r\n    public setRoutes(){\r\n        this.get_status();\r\n        this.put_status();\r\n        this.add_status();\r\n    }\r\n    private get_status(){\r\n        this._app.get('/get_status/:id_tvshow/:season', (req, res)=>{\r\n            if(!req.params){\r\n                return res.sendStatus(400);\r\n            }else{\r\n                this._pool.query('SELECT id_status, id_tvshow, downloaded, viewed, season, episode FROM status WHERE id_tvshow=? AND season=?',[req.params.id_tvshow, req.params.season], (error, rows)=>{\r\n                    if(error){\r\n                        return res.json({success: false, error: error});\r\n                    }else{\r\n                        return res.json({success: true, result: rows});\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    private add_status(){\r\n        this._app.post('/add_status', (req, res) => {\r\n            if(!req.body)\r\n                return res.sendStatus(400);\r\n            else\r\n                this._pool.query('INSERT INTO status (id_tvshow, downloaded, viewed, season, episode) VALUES (?,?,?,?,?)', [req.body.id_tvshow, req.body.downloaded, req.body.viewed, req.body.season, req.body.episode], (error, result) => {\r\n                    if(error) {\r\n                        return res.json({success: false, error: error});\r\n                    }else{\r\n                        return res.json({\r\n                            success: true,\r\n                            id_status: result.insertId\r\n                        });\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    private put_status(){\r\n        this._app.put('/put_status',(req, res) => {\r\n            if(!req.body){\r\n                return res.sendStatus(400);\r\n            }else{\r\n                this._pool.query('UPDATE status SET downloaded=?, viewed=? WHERE id_status = ?', [req.body.downloaded, req.body.viewed, req.body.id_status], (error) => {\r\n                    if (error)\r\n                        return res.json({success: false, error: error});\r\n                    else\r\n                        return res.json({success:true});\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}