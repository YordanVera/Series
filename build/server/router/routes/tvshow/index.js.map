{"version":3,"sources":["../../source/server/router/routes/tvshow/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as express         from \"express\";\r\nimport * as mysql           from 'mysql';\r\nimport * as _               from 'lodash';\r\nimport { tmdb_services }    from '../../../tmdb/tmdb_services';\r\nimport { config_db }        from '../../../config/config_db';\r\n\r\nexport class tvshow_routes {\r\n    private _app            : express.Express;\r\n    private _tmdb_services  : tmdb_services;\r\n    private _pool           : any;\r\n\r\n    constructor(app, tmdb_services){\r\n        this._app           = app;\r\n        this._tmdb_services = tmdb_services;\r\n        this._pool          = mysql.createPool(config_db);\r\n        this.setRoutes();\r\n    }\r\n    public setRoutes(){\r\n        this.list_tvshows();\r\n        this.add_tvshow();\r\n        this.del_tvshow();\r\n        this.update_tvshow();\r\n        this.get_tvshow_data();\r\n        this.get_tvshow_full_data();\r\n        this.get_season_detail();\r\n    }\r\n    private list_tvshows(){\r\n        this._app.get('/list_tvshows',(req, res)=>{\r\n            if(!req.body)\r\n                return res.sendStatus(400);\r\n            else\r\n                this._pool.query('SELECT id_tvshow, name FROM tvshow', (error, rows, fields) => {\r\n                    if (error)\r\n                        return res.json({success: false, error: error});\r\n                    else\r\n                        //get data api\r\n                        var data =[];\r\n                        rows.forEach((tvshow, index, rows) => {\r\n                            let subject = this._tmdb_services.getTVShowData(tvshow.name);\r\n                            subject.subscribe(\r\n                                (x:any) => {\r\n                                    if(x.total_results === 1){\r\n                                        data.push({\r\n                                            id_tvshow    : rows[index].id_tvshow,\r\n                                            name       : rows[index].name,\r\n                                            data        : x.results[0]});\r\n                                    }\r\n                                    else{\r\n                                        let tvshow = _.find(x.results, (o:any)=>{\r\n                                            return (\r\n                                                o.name === rows[index].name &&\r\n                                                o.poster_path.length > 1 &&\r\n                                                o.overview.length > 1\r\n                                            );\r\n                                        });\r\n                                        data.push({\r\n                                                    id_tvshow    : rows[index].id_tvshow,\r\n                                                    name       : rows[index].name,\r\n                                                    data        : tvshow});\r\n                                    }\r\n                                },\r\n                                e   => {\r\n                                    data.push({\r\n                                        id_tvshow    : rows[index].id_tvshow,\r\n                                        name       : rows[index].name,\r\n                                        data        : e});\r\n                                },\r\n                                ()  => {\r\n                                    if(data.length===rows.length){\r\n                                        return res.json({success:true, result:data});\r\n                                    }\r\n                                });\r\n                        });\r\n                });\r\n        });\r\n    }\r\n    private add_tvshow(){\r\n        this._app.post('/add_tvshow', (req, res) => {\r\n            if(!req.body)\r\n                return res.sendStatus(400);\r\n            else\r\n                this._pool.query('INSERT INTO tvshow (name) VALUES (?)', [req.body.TVShow_name], (error, result) => {\r\n                    if (error) return res.json({success: false, error: error});\r\n                    return res.json({\r\n                        success: true,\r\n                        id_tvshow: result.insertId\r\n                    });\r\n                });\r\n        });\r\n    }\r\n    private del_tvshow(){\r\n        this._app.delete('/del_tvshow/:id_tvshow',(req, res) => {\r\n            if(!req.params)\r\n                return res.sendStatus(400);\r\n            else\r\n                this._pool.query('DELETE FROM tvshow WHERE id_tvshow = ?', [req.params.id_tvshow], (error) => {\r\n                    if (error) return res.json({success: false, error: error});\r\n                    return res.json({success: true});\r\n                });\r\n        });\r\n    }\r\n    private update_tvshow(){\r\n        this._app.put('/update_tvshow',(req, res) => {\r\n            if(!req.body){\r\n                return res.sendStatus(400);\r\n            }else{\r\n                this._pool.query('UPDATE tvshow SET name = ? WHERE id_tvshow = ?', [req.body.nombre, req.body.id_tvshow], (error) => {\r\n                    if (error)\r\n                        return res.json({success: false, error: error});\r\n                    else\r\n                        return res.json({success:true});\r\n                });\r\n            }\r\n        });\r\n    }\r\n    private get_tvshow_data(){\r\n        this._app.get('/get_tvshow_data/:name', (req, res)=>{\r\n            if(!req.body)\r\n                return res.sendStatus(400)\r\n            else\r\n                var subject : any = this._tmdb_services.getTVShowData(req.params.name);\r\n                subject.subscribe(\r\n                    x   => {\r\n                        if(x.total_results === 1){\r\n                            return res.json({success:true, result:x.results[0]});\r\n                        }\r\n                        else{\r\n                            let tvshow = _.find(x.results, (o:any)=>{\r\n                                            return (\r\n                                                o.name === req.params.name &&\r\n                                                o.poster_path.length > 1 &&\r\n                                                o.overview.length > 1\r\n                                            );\r\n                                        });\r\n                             return res.json({success:true, result:tvshow});\r\n                        }\r\n                    },\r\n                    e   => {\r\n                        return res.json({success:false, err:e});\r\n                    }\r\n                );\r\n        });\r\n    }\r\n    private get_tvshow_full_data(){\r\n        this._app.get('/get_tvshow_full_data/:id',(req, res)=>{\r\n            if(!req.body){\r\n                return res.sendStatus(400);\r\n            }else{\r\n                this._tmdb_services.getTVShowFullData(req.params.id).subscribe(\r\n                    data => {\r\n                        return res.json({success:true, result:data});\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n    private get_season_detail(){\r\n        this._app.get('/get_season_detail/:id/:season_number',(req, res)=>{\r\n            if(!req.body){\r\n                return res.sendStatus(400);\r\n            }else{\r\n                this._tmdb_services.getSeasonDetail(req.params.id, req.params.season_number).subscribe(\r\n                    data => {\r\n                        return res.json({success:true, result:data});\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}