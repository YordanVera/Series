{"version":3,"sources":["../../source/server/router/routes/links/index.ts"],"names":[],"mappings":";AACA,IAAY,CAAC,WAAoB,QAAQ,CAAC,CAAA;AAC1C,IAAY,OAAO,WAAc,SAAS,CAAC,CAAA;AAC3C,IAAY,OAAO,WAAc,SAAS,CAAC,CAAA;AAC3C,IAAY,EAAE,WAAmB,SAAS,CAAC,CAAA;AAC3C,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B;IAGI,sBAAY,GAAG;QACX,IAAI,CAAC,IAAI,GAAa,GAAG,CAAC;QAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IACM,gCAAS,GAAhB;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IACO,gCAAS,GAAjB;QAAA,iBAkFC;QAjFG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0CAA0C,EAAC,UAAC,GAAG,EAAE,GAAG;YAC9D,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA,CAAC;gBACV,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC/B,CAAC;YAAA,IAAI,CAAA,CAAC;gBACF,IAAI,aAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;gBACzC,IAAI,QAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC/B,IAAI,SAAO,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;gBAEjC,IAAI,OAAK,GAAG,KAAI,CAAC;gBACjB,IAAI,MAAI,GAAG,GAAG,CAAC;gBACf,IAAI,KAAK,GAAG,EAAE,CAAC;gBACf,IAAI,WAAW,GAAG,CAAC,CAAA;gBACnB,EAAE,CAAA,CAAC,QAAM,IAAE,CAAC,IAAI,SAAO,IAAE,CAAC,CAAC,CAAA,CAAC;oBACxB,KAAK,GAAG,aAAW,GAAC,KAAK,GAAC,QAAM,GAAC,IAAI,GAAC,SAAO,GAAC,uBAAuB,CAAC;gBAC1E,CAAC;gBAAA,IAAI,CAAC,EAAE,CAAA,CAAC,QAAM,IAAE,CAAC,IAAI,SAAO,GAAC,CAAC,CAAC,CAAA,CAAC;oBAC7B,KAAK,GAAG,aAAW,GAAC,KAAK,GAAC,QAAM,GAAC,GAAG,GAAC,SAAO,GAAC,uBAAuB,CAAC;gBACzE,CAAC;gBACD,IAAI,CAAC,EAAE,CAAA,CAAC,QAAM,GAAC,CAAC,IAAI,SAAO,IAAE,CAAC,CAAC,CAAA,CAAC;oBAC5B,KAAK,GAAG,aAAW,GAAC,IAAI,GAAC,QAAM,GAAC,IAAI,GAAC,SAAO,GAAC,uBAAuB,CAAC;gBACzE,CAAC;gBACD,IAAI,CAAC,EAAE,CAAA,CAAC,QAAM,GAAC,CAAC,IAAI,SAAO,GAAC,CAAC,CAAC,CAAA,CAAC;oBAC3B,KAAK,GAAG,aAAW,GAAC,IAAI,GAAC,QAAM,GAAC,GAAG,GAAC,SAAO,GAAC,uBAAuB,CAAC;gBACxE,CAAC;gBACD,IAAI,YAAY,GAAG,EAAE,CAAC;gBACtB,IAAI,MAAM,GAAG,EAAE,CAAC;gBAChB,UAAU,CAAC;oBACP,MAAM,CAAC,KAAK,EAAE,UAAS,GAAG,EAAE,GAAG;wBAC3B,EAAE,CAAA,CAAC,GAAG,CAAC,CAAA,CAAC;4BACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACrB,CAAC;wBAAA,IAAI,CAAA,CAAC;4BACF,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,UAAC,CAAC,EAAE,CAAC;gCACtB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BACzB,CAAC,CAAC,CAAC;4BACH,EAAE,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;gCAClB,WAAW,IAAI,CAAC,CAAA;gCAChB,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;oCACX,UAAU,CAAC,cAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,EAAC,IAAI,CAAC,CAAC;gCACpC,CAAC;4BACL,CAAC;4BACD,IAAI,CAAA,CAAC;gCACD,MAAM,GAAG,OAAK,CAAC,YAAY,CAAC,YAAY,EAAC,aAAW,EAAC,QAAM,EAAC,SAAO,CAAC,CAAC;gCACrE,MAAM,GAAG,OAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gCACtC,MAAM,GAAG,OAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gCACtC,MAAM,GAAG,OAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;gCACxC,MAAM,GAAG,OAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gCACpC,EAAE,CAAA,CAAC,MAAM,CAAC,MAAM,KAAG,CAAC,CAAC,CAAA,CAAC;oCAClB,MAAM,CAAC,MAAI,CAAC,IAAI,CAAC,EAAC,OAAO,EAAC,KAAK,EAAE,MAAM,EAAC,SAAS,EAAC,CAAC,CAAC;gCACxD,CAAC;gCACD,IAAI,CAAA,CAAC;oCACD,OAAK,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,SAAS,CACrC,UAAA,IAAI;wCACA,IAAI,OAAO,GAAG,OAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wCACvC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;wCACjD,OAAK,CAAC,oBAAoB,CAAC,OAAO,EAAC,aAAW,EAAC,QAAM,EAAC,SAAO,CAAC,CAAC,SAAS,CACpE,UAAA,MAAM;4CACF,OAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,CAClC,UAAA,KAAK;gDACD,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,OAAO,EAAE,KAAK;oDAC9B,OAAO,CAAC,MAAM,CAAC,GAAC,EAAE,CAAC;oDACnB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,UAAC,CAAC,EAAE,CAAC;wDACzB,CAAC,CAAC,KAAK,CAAC,KAAK,EAAC,UAAC,GAAG,EAAE,GAAG;4DACnB,EAAE,CAAA,CAAC,GAAG,CAAC,KAAK,KAAG,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAA,CAAC;gEACzC,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC;4DAC7B,CAAC;wDACL,CAAC,CAAC,CAAC;oDACP,CAAC,CAAC,CAAC;gDACP,CAAC,CAAC,CAAC;gDACH,MAAM,CAAC,MAAI,CAAC,IAAI,CAAC,EAAC,OAAO,EAAC,IAAI,EAAE,MAAM,EAAC,OAAO,EAAC,CAAC,CAAC;4CACrD,CAAC,CACJ,CAAC;wCACN,CAAC,CACJ,CAAC;oCACN,CAAC,CACJ,CAAC;gCACN,CAAC;4BACL,CAAC;wBACL,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC,EAAC,IAAI,CAAC,CAAC;YACZ,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACS,mCAAY,GAAtB,UAAuB,KAAS,EAAE,WAAmB,EAAE,MAAa,EAAE,OAAc;QAChF,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,YAAY,GAAE;YACd,IAAI,GAAC,MAAM,GAAC,GAAG,GAAC,OAAO;YACvB,IAAI,GAAC,MAAM,GAAC,IAAI,GAAC,OAAO;YACxB,IAAI,GAAC,MAAM,GAAC,IAAI,GAAC,OAAO;YACxB,IAAI,GAAC,MAAM,GAAC,KAAK,GAAC,OAAO;YACzB,IAAI,GAAC,MAAM,GAAC,IAAI,GAAC,OAAO;YACxB,IAAI,GAAC,MAAM,GAAC,KAAK,GAAC,OAAO;YACzB,GAAG,GAAC,MAAM,GAAC,GAAG,GAAC,OAAO;YACtB,GAAG,GAAC,MAAM,GAAC,IAAI,GAAC,OAAO;YACvB,GAAG,GAAC,MAAM,GAAC,IAAI,GAAC,OAAO;YACvB,GAAG,GAAC,MAAM,GAAC,KAAK,GAAC,OAAO;YACxB,GAAG,GAAC,MAAM,GAAC,IAAI,GAAC,OAAO;YACvB,GAAG,GAAC,MAAM,GAAC,KAAK,GAAC,OAAO;SAC3B,CAAC;QACF,IAAI,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,EAAC,GAAG,CAAC,CAAC;QAC7C,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,UAAC,OAAO;YACrB,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAC;gBAClF,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,UAAC,CAAC,EAAE,CAAC;oBACzB,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAC;wBAChC,MAAM,GAAC,KAAK,CAAC;oBACjB,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,CAAA,CAAC;oBACR,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAC;wBAC/E,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACzB,CAAC;gBACL,CAAC;gBAAA,IAAI,CAAA,CAAC;oBACD,MAAM,GAAC,IAAI,CAAC;gBACjB,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACS,qCAAc,GAAxB,UAAyB,KAAK;QAC1B,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,WAAW,GAAG;YACd,KAAK;YACL,UAAU;YACV,MAAM;YACN,QAAQ;YACR,QAAQ;YACR,WAAW;YACX,OAAO;YACP,KAAK;YACL,MAAM;YACN,MAAM;YACN,SAAS;YACT,SAAS;YACT,KAAK;YACL,KAAK;YACL,OAAO;YACP,SAAS;YACT,KAAK;YACL,QAAQ,CAAC,CAAC;QACd,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,UAAC,OAAO,EAAE,KAAK;YAC7B,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,UAAC,KAAK;gBACzB,IAAI,KAAK,GAAY,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,KAAK,GAAY,KAAK,CAAC;gBAC3B,EAAE,CAAA,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAC;oBAC5B,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;gBACnC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACS,qCAAc,GAAxB,UAAyB,KAAK;QAC1B,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,UAAC,OAAO,EAAE,KAAK;YAC5B,EAAE,CAAA,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAG,CAAC,CAAC,CAAC,CAAA,CAAC;gBAClC,IAAI,CAAC,GAAG,OAAO,CAAC;gBAChB,CAAC,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC;YAAA,IAAI,CAAA,CAAC;gBACF,EAAE,CAAA,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAG,CAAC,CAAC,CAAC,CAAA,CAAC;oBACjC,IAAI,CAAC,GAAG,OAAO,CAAC;oBAChB,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;oBACjB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnB,CAAC;gBAAA,IAAI,CAAA,CAAC;oBACF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzB,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACS,uCAAgB,GAA1B,UAA2B,KAAK;QAC5B,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,UAAC,OAAO,EAAE,KAAK;YAC7B,EAAE,CAAA,CAAC,aAAa,CAAC,MAAM,KAAG,CAAC,CAAC,CAAA,CAAC;gBACzB,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChC,CAAC;YAAA,IAAI,CAAA,CAAC;gBACF,IAAI,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;gBAC9C,IAAI,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC9B,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,UAAC,CAAC,EAAE,CAAC;oBAC1B,IAAI,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;oBACvC,IAAI,cAAc,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBACpC,EAAE,CAAA,CAAC,cAAc,KAAK,OAAO,CAAC,CAAA,CAAC;wBAC3B,OAAO,EAAE,CAAC;oBACd,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,EAAE,CAAA,CAAC,OAAO,KAAG,CAAC,CAAC,CAAA,CAAC;oBACZ,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAChC,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,aAAa,CAAC;IACzB,CAAC;IACS,mCAAY,GAAtB,UAAuB,KAAK;QACxB,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,UAAC,OAAO,EAAE,KAAK;YAC5B,IAAI,CAAC,GAAG,OAAO,CAAC;YAChB,IAAI,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAC9C,EAAE,CAAA,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,kBAAkB,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,eAAe,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,kBAAkB,CAAC,CAAA,CAAC;gBACzJ,CAAC,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAC,IAAI,GAAC,YAAY,CAAC,CAAC,CAAC,GAAC,YAAY,GAAC,YAAY,CAAC,CAAC,CAAC,GAAC,GAAG,GAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACzG,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACS,wCAAiB,GAA3B,UAA4B,KAAK;QAC7B,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,OAAO,GAAG,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;QAEvB,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,UAAC,OAAO,EAAE,KAAK;YACjC,IAAI,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,YAAY,EAAC,WAAW,CAAC,CAAC;YACjE,IAAI,CAAC,GAAG,OAAO,CAAC;YAChB,IAAI,OAAO,GAAG;gBACV,GAAG,EAAE,KAAK;gBACV,MAAM,EAAE,KAAK;aAChB,CAAC;YACF,OAAO,CAAC,OAAO,EAAE,UAAC,KAAK,EAAE,QAAQ,EAAE,IAAI;gBACnC,EAAE,CAAA,CAAC,CAAC,KAAK,CAAC,CAAA,CAAC;oBACP,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC3B,IAAI,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;oBAC/B,EAAE,CAAA,CAAC,GAAG,CAAC,MAAM,KAAG,CAAC,CAAC,CAAA,CAAC;wBACf,IAAI,YAAY,GAAG,EAAE,CAAC;wBACtB,CAAC,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,UAAS,CAAC;4BAChC,EAAE,CAAA,CAAC,CAAC,KAAG,CAAC,CAAC,CAAA,CAAC;gCACN,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;gCAC1B,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gCACzB,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;gCACtC,IAAI,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;gCAC9B,YAAY,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gCAChC,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;4BACvC,CAAC;4BACD,MAAM,CAAC,IAAI,CAAC;wBAChB,CAAC,CAAC,CAAC;wBACH,CAAC,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,UAAS,CAAC;4BAChC,EAAE,CAAA,CAAC,CAAC,KAAG,CAAC,CAAC,CAAA,CAAC;gCACN,EAAE,CAAA,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAC;oCAC3E,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;gCAC1C,CAAC;4BACL,CAAC;4BACD,EAAE,CAAA,CAAC,CAAC,KAAG,CAAC,CAAC,CAAA,CAAC;gCACN,EAAE,CAAA,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAC;oCAC3E,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;gCAC1C,CAAC;4BACL,CAAC;4BACD,MAAM,CAAC,IAAI,CAAC;wBAChB,CAAC,CAAC,CAAC;wBACH,CAAC,CAAC,cAAc,CAAC,GAAG,YAAY,CAAC;wBACjC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACf,EAAE,CAAA,CAAC,IAAI,KAAK,GAAG,GAAC,CAAC,CAAC,CAAA,CAAC;4BACf,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACzB,CAAC;wBACD,IAAI,EAAE,CAAC;oBACX,CAAC;oBAAA,IAAI,CAAA,CAAC;wBACF,EAAE,CAAA,CAAC,IAAI,KAAK,GAAG,GAAC,CAAC,CAAC,CAAA,CAAC;4BACf,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;wBACzB,CAAC;wBACD,IAAI,EAAE,CAAC;oBACX,CAAC;gBACL,CAAC;gBAAA,IAAI,CAAA,CAAC;oBACF,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBACvB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAC,KAAK,CAAC,CAAC;gBACnD,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACS,mCAAY,GAAtB,UAAuB,KAAK;QACxB,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,UAAC,OAAO,EAAE,KAAK;YACzB,EAAE,CAAA,CAAC,MAAM,CAAC,MAAM,KAAG,CAAC,CAAC,CAAA,CAAC;gBACpB,MAAM,CAAC,IAAI,CAAC;oBACV,KAAK,EAAC,OAAO,CAAC,KAAK;oBACnB,IAAI,EAAC;wBACH;4BACA,KAAK,EAAC,OAAO,CAAC,KAAK;4BACnB,WAAW,EAAC,OAAO,CAAC,WAAW;4BAC/B,IAAI,EAAC,OAAO,CAAC,IAAI;4BACjB,KAAK,EAAC,OAAO,CAAC,KAAK;4BACnB,YAAY,EAAC,OAAO,CAAC,YAAY;4BACjC,IAAI,EAAC,OAAO,CAAC,IAAI;4BACjB,GAAG,EAAC,OAAO,CAAC,GAAG;4BACf,OAAO,EAAC,OAAO,CAAC,OAAO;yBACtB;qBACF;iBACF,CAAC,CAAC;YACL,CAAC;YAAA,IAAI,CAAA,CAAC;gBACJ,IAAI,GAAG,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,EAAC,OAAO,EAAC,OAAO,CAAC,KAAK,EAAC,CAAC,CAAC;gBACvD,EAAE,CAAA,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,CAAA,CAAC;oBACT,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;wBACpB,KAAK,EAAC,OAAO,CAAC,KAAK;wBACnB,WAAW,EAAC,OAAO,CAAC,WAAW;wBAC/B,IAAI,EAAC,OAAO,CAAC,IAAI;wBACjB,KAAK,EAAC,OAAO,CAAC,KAAK;wBACnB,YAAY,EAAC,OAAO,CAAC,YAAY;wBACjC,IAAI,EAAC,OAAO,CAAC,IAAI;wBACjB,GAAG,EAAC,OAAO,CAAC,GAAG;wBACf,OAAO,EAAC,OAAO,CAAC,OAAO;qBACxB,CAAC,CAAC;gBACL,CAAC;gBAAA,IAAI,CAAA,CAAC;oBACJ,MAAM,CAAC,IAAI,CAAC;wBACZ,KAAK,EAAC,OAAO,CAAC,KAAK;wBACnB,IAAI,EAAC;4BACH;gCACA,KAAK,EAAC,OAAO,CAAC,KAAK;gCACnB,WAAW,EAAC,OAAO,CAAC,WAAW;gCAC/B,IAAI,EAAC,OAAO,CAAC,IAAI;gCACjB,KAAK,EAAC,OAAO,CAAC,KAAK;gCACnB,YAAY,EAAC,OAAO,CAAC,YAAY;gCACjC,IAAI,EAAC,OAAO,CAAC,IAAI;gCACjB,GAAG,EAAC,OAAO,CAAC,GAAG;gCACf,OAAO,EAAC,OAAO,CAAC,OAAO;6BACtB;yBACF;qBACF,CAAC,CAAC;gBACH,CAAC;YACH,CAAC;QACL,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACS,2CAAoB,GAA9B,UAA+B,KAAK,EAAE,WAAkB,EAAE,MAAc,EAAE,OAAe;QACrF,IAAI,OAAO,GAAG,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAC,WAAW,EAAC,MAAM,EAAC,OAAO,CAAC,CAAC;QACrE,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,CAAC,CAAC,OAAO,CAAC,UAAU,EAAC,UAAC,OAAO,EAAC,KAAK;YAE/B,UAAU,CAAC;gBACP,MAAM,CAAC,OAAO,CAAC,KAAK,EAAC,UAAS,GAAG,EAAE,GAAG;oBAClC,OAAO,CAAC,OAAO,CAAC,GAAC,EAAE,CAAC;oBACpB,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,CAAA,CAAC;wBACL,IAAI,WAAW,GAAG,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,EAAC,WAAW,EAAC,MAAM,EAAC,OAAO,CAAC,CAAC;wBAC9E,OAAO,CAAC,KAAK,GAAG,WAAW,CAAC;wBAC5B,EAAE,CAAA,CAAC,IAAI,KAAG,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC,CAAA,CAAC;4BAC3B,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC7B,CAAC;wBACD,IAAI,EAAE,CAAC;oBACX,CAAC;oBAAA,IAAI,CAAA,CAAC;wBACF,EAAE,CAAA,CAAC,IAAI,KAAG,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC,CAAA,CAAC;4BAC3B,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC7B,CAAC;wBACD,IAAI,EAAE,CAAC;oBACX,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,EAAC,IAAI,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACS,qCAAc,GAAxB,UAAyB,UAAU;QAC/B,IAAI,OAAO,GAAG,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,MAAM,GAAG,UAAU,CAAC;QACxB,IAAI,kBAAkB,GAAG,CAAC,CAAC;QAC3B,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,UAAC,OAAO,EAAE,KAAK;YAC7B,kBAAkB,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC;QAC/C,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,OAAO,CAAC,MAAM,EAAC,UAAC,OAAO,EAAC,KAAK;YAC3B,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,CAAA,CAAC;gBACvB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAC,UAAC,CAAC,EAAE,CAAC;oBACzB,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,UAAS,KAAK,EAAE,QAAQ,EAAE,IAAI;wBAC1C,EAAE,CAAA,CAAC,CAAC,KAAK,CAAC,CAAA,CAAC;4BACP,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE;gCACf,mBAAmB,EAAE,KAAK;gCAC1B,OAAO,EAAE,KAAK;gCACd,cAAc,EAAE,IAAI;6BACvB,CAAC,CAAC;4BACX,IAAI,GAAG,GAAG,EAAE,CAAC;4BACb,CAAC,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC;gCACvB,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;gCAC5C,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gCACrD,iBAAiB;gCACjB,mBAAmB;gCACnB,MAAM,CAAC,IAAI,CAAC;4BAChB,CAAC,CAAC,CAAC;4BACH,EAAE,CAAA,CAAC,QAAQ,KAAK,kBAAkB,GAAC,CAAC,CAAC,CAAA,CAAC;gCAClC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BACzB,CAAC;4BACD,QAAQ,EAAE,CAAC;wBACf,CAAC;wBAAA,IAAI,CAAA,CAAC;4BACF,EAAE,CAAA,CAAC,QAAQ,KAAK,kBAAkB,GAAC,CAAC,CAAC,CAAA,CAAC;gCAClC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BACzB,CAAC;4BACD,QAAQ,EAAE,CAAC;wBACf,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACS,sCAAe,GAAzB,UAA0B,KAAK,EAAE,WAAkB,EAAE,MAAc,EAAE,OAAe;QAChF,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,WAAW,GAAG;YACd,WAAW;YACX,gBAAgB;YAChB,UAAU;YACV,KAAK,CAAC,CAAC;QACX,IAAI,YAAY,GAAG;YACf,QAAQ;YACR,QAAQ;YACR,QAAQ,CAAC,CAAC;QACd,CAAC,CAAC,YAAY,CAAC,KAAK,EAAC,UAAC,OAAO,EAAE,KAAK;YAChC,mBAAmB;YACnB,EAAE,CAAA,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAC,EAAE,CAAC,CAAA,CAAC;gBACvB,IAAI,cAAY,GAAa,KAAK,CAAC;gBACnC,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,UAAC,CAAC,EAAE,CAAC;oBACxB,EAAE,CAAA,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAG,CAAC,CAAC,CAAC,CAAA,CAAC;wBAC7B,cAAY,GAAG,IAAI,CAAC;oBACxB,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,oBAAoB;gBACxB,IAAI,eAAa,GAAa,KAAK,CAAC;gBAChC,CAAC,CAAC,OAAO,CAAC,YAAY,EAAE,UAAC,CAAC,EAAE,CAAC;oBACzB,EAAE,CAAA,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAG,CAAC,CAAC,CAAC,CAAA,CAAC;wBAC9B,eAAa,GAAG,IAAI,CAAC;oBACzB,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,8BAA8B;gBAC9B,EAAE,CAAA,CAAC,CAAC,cAAY,IAAI,CAAC,eAAa,CAAC,CAAA,CAAC;oBAChC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACzB,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,EAAC,MAAM,CAAC,CAAC;QACjC,MAAM,CAAC,MAAM,CAAA;IACjB,CAAC;IACS,mCAAY,GAAtB,UAAuB,KAAK,EAAE,WAAkB,EAAE,MAAc,EAAE,OAAe;QAC7E,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,EAAE,CAAA,CAAC,MAAM,IAAE,CAAC,IAAI,OAAO,IAAE,CAAC,CAAC,CAAA,CAAC;YACxB,KAAK,GAAG,WAAW,GAAC,KAAK,GAAC,MAAM,GAAC,IAAI,GAAC,OAAO,CAAC;QAClD,CAAC;QAAA,IAAI,CAAC,EAAE,CAAA,CAAC,MAAM,IAAE,CAAC,IAAI,OAAO,GAAC,CAAC,CAAC,CAAA,CAAC;YAC7B,KAAK,GAAG,WAAW,GAAC,KAAK,GAAC,MAAM,GAAC,GAAG,GAAC,OAAO,CAAC;QACjD,CAAC;QACD,IAAI,CAAC,EAAE,CAAA,CAAC,MAAM,GAAC,CAAC,IAAI,OAAO,IAAE,CAAC,CAAC,CAAA,CAAC;YAC5B,KAAK,GAAG,WAAW,GAAC,IAAI,GAAC,MAAM,GAAC,IAAI,GAAC,OAAO,CAAC;QACjD,CAAC;QACD,IAAI,CAAC,EAAE,CAAA,CAAC,MAAM,GAAC,CAAC,IAAI,OAAO,GAAC,CAAC,CAAC,CAAA,CAAC;YAC3B,KAAK,GAAG,WAAW,GAAC,IAAI,GAAC,MAAM,GAAC,GAAG,GAAC,OAAO,CAAC;QAChD,CAAC;QACD,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,UAAC,OAAO,EAAE,KAAK;YACjC,EAAE,CAAA,CAAC,OAAO,OAAO,CAAC,KAAK,KAAK,WAAW,CAAC,CAAA,CAAC;gBACrC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,UAAC,CAAC,EAAE,CAAC;oBAC9B,EAAE,CAAA,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,WAAW,CAAC,CAAA,CAAC;wBAC7B,IAAI,MAAM,GAAG,KAAK,GAAC,GAAG,GAAC,CAAC,CAAC,GAAG,GAAC,GAAG,GAAC,OAAO,CAAC,KAAK,GAAC,mBAAmB,CAAC;wBACnE,IAAI,OAAK,GAAG,CAAC,CAAC,SAAS,CAAC,UAAU,EAAC,EAAC,OAAO,EAAC,MAAM,EAAC,CAAC,CAAC;wBACrD,EAAE,CAAA,CAAC,OAAK,KAAG,CAAC,CAAC,CAAC,CAAA,CAAC;4BACX,UAAU,CAAC,IAAI,CAAC;gCACZ,KAAK,EAAE,MAAM;gCACb,GAAG,EAAE,CAAC,CAAC,GAAG;gCACV,KAAK,EAAE,OAAO,CAAC,KAAK;6BACvB,CAAC,CAAC;wBACP,CAAC;oBACL,CAAC;oBAAA,IAAI,CAAA,CAAC;wBACF,IAAI,MAAM,GAAG,KAAK,GAAC,GAAG,GAAC,OAAO,CAAC,KAAK,GAAC,mBAAmB,CAAC;wBACzD,IAAI,OAAK,GAAG,CAAC,CAAC,SAAS,CAAC,UAAU,EAAC,EAAC,OAAO,EAAC,MAAM,EAAC,CAAC,CAAC;wBACrD,EAAE,CAAA,CAAC,OAAK,KAAG,CAAC,CAAC,CAAC,CAAA,CAAC;4BACX,UAAU,CAAC,IAAI,CAAC;gCACZ,KAAK,EAAE,MAAM;gCACb,KAAK,EAAE,OAAO,CAAC,KAAK;6BACvB,CAAC,CAAC;wBACP,CAAC;oBACL,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC;YAAA,IAAI,CAAA,CAAC;gBACF,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,UAAC,CAAC,EAAE,CAAC;oBAC9B,EAAE,CAAA,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,WAAW,CAAC,CAAA,CAAC;wBAC7B,IAAI,MAAM,GAAG,KAAK,GAAC,GAAG,GAAC,CAAC,CAAC,GAAG,GAAC,mBAAmB,CAAC;wBACjD,IAAI,OAAK,GAAG,CAAC,CAAC,SAAS,CAAC,UAAU,EAAC,EAAC,OAAO,EAAC,MAAM,EAAC,CAAC,CAAC;wBACrD,EAAE,CAAA,CAAC,OAAK,KAAG,CAAC,CAAC,CAAC,CAAA,CAAC;4BACX,UAAU,CAAC,IAAI,CAAC;gCACZ,KAAK,EAAE,MAAM;gCACb,GAAG,EAAE,CAAC,CAAC,GAAG;6BACb,CAAC,CAAC;wBACP,CAAC;oBACL,CAAC;oBAAA,IAAI,CAAA,CAAC;wBACF,IAAI,MAAM,GAAG,KAAK,GAAC,mBAAmB,CAAC;wBACvC,IAAI,OAAK,GAAG,CAAC,CAAC,SAAS,CAAC,UAAU,EAAC,EAAC,OAAO,EAAC,MAAM,EAAC,CAAC,CAAC;wBACrD,EAAE,CAAA,CAAC,OAAK,KAAG,CAAC,CAAC,CAAC,CAAA,CAAC;4BACX,UAAU,CAAC,IAAI,CAAC;gCACZ,KAAK,EAAE,MAAM;6BAChB,CAAC,CAAC;wBACP,CAAC;oBACL,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC;IACL,mBAAC;AAAD,CAtfA,AAsfC,IAAA;AAtfY,oBAAY,eAsfxB,CAAA","file":"index.js","sourcesContent":["import * as express         from \"express\";\r\nimport * as _               from 'lodash';\r\nimport * as request         from 'request';\r\nimport * as cheerio         from 'cheerio';\r\nimport * as Rx              from 'rxjs/Rx';\r\nvar google = require('google');\r\nexport class links_routes {\r\n    private _app            : express.Express;\r\n\r\n    constructor(app){\r\n        this._app           = app;\r\n        this.setRoutes();\r\n    }\r\n    public setRoutes(){\r\n        this.get_links();\r\n    }\r\n    private get_links(){\r\n        this._app.get('/get_links/:TVShow_name/:season/:episode',(req, res)=>{\r\n            if(!req.body){\r\n                return res.sendStatus(400);\r\n            }else{\r\n                let TVShow_name = req.params.TVShow_name;\r\n                let season = req.params.season;\r\n                let episode = req.params.episode;\r\n                \r\n                let _self = this;\r\n                let _res = res;\r\n                var query = '';\r\n                var nextCounter = 0\r\n                if(season<=9 && episode<=9){\r\n                    query = TVShow_name+' S0'+season+'E0'+episode+' site:extratorrent.cc';\r\n                }else if(season<=9 && episode>9){\r\n                    query = TVShow_name+' S0'+season+'E'+episode+' site:extratorrent.cc';\r\n                }\r\n                else if(season>9 && episode<=9){\r\n                    query = TVShow_name+' S'+season+'E0'+episode+' site:extratorrent.cc';\r\n                }\r\n                else if(season>9 && episode>9){\r\n                    query = TVShow_name+' S'+season+'E'+episode+' site:extratorrent.cc';\r\n                }\r\n                var links_result = [];\r\n                var result = [];\r\n                setTimeout(()=>{\r\n                    google(query, function(err, res){\r\n                        if(err){\r\n                            console.log(err);\r\n                        }else{\r\n                            _.forEach(res.links, (e, i)=>{\r\n                                links_result.push(e);\r\n                            });\r\n                            if (nextCounter < 2) {\r\n                                nextCounter += 1\r\n                                if (res.next) {\r\n                                    setTimeout(()=>res.next(),1000);\r\n                                }\r\n                            }\r\n                            else{\r\n                                result = _self.select_links(links_result,TVShow_name,season,episode);\r\n                                result = _self.groups_release(result);\r\n                                result = _self.get_resolution(result);\r\n                                result = _self.delete_duplicate(result);\r\n                                result = _self.torrent_link(result);\r\n                                if(result.length===0){\r\n                                    return _res.json({success:false, result:'no data'});\r\n                                }\r\n                                else{\r\n                                    _self.get_info_torrents(result).subscribe(\r\n                                        data => {\r\n                                            let _result = _self.format_links(data);\r\n                                            _result = _.orderBy(_result, ['group'], ['asc']);\r\n                                            _self.get_queries_for_subs(_result,TVShow_name,season,episode).subscribe(\r\n                                                result => {\r\n                                                    _self.get_subs_links(result).subscribe(\r\n                                                        _data => {\r\n                                                            _.forEach(_result, (element, index)=>{\r\n                                                                element['subs']=[];\r\n                                                                _.forEach(element.data, (e, i)=>{\r\n                                                                    _.forIn(_data,(elm, idx)=>{\r\n                                                                        if(elm.group===e.group && elm.res === e.res){\r\n                                                                            element.subs = elm.links;\r\n                                                                        }\r\n                                                                    });\r\n                                                                });\r\n                                                            });\r\n                                                            return _res.json({success:true, result:_result});\r\n                                                        }\r\n                                                    );\r\n                                                }\r\n                                            );\r\n                                        }\r\n                                    );\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                },1000);\r\n            }\r\n        });\r\n    }\r\n    protected select_links(links:any, TVShow_name: string, season:number, episode:number){\r\n        let _links = [];\r\n        let _error_title =[\r\n            'S0'+season+'E'+episode,\r\n            'S0'+season+'E0'+episode,\r\n            'S0'+season+'.E'+episode,\r\n            'S0'+season+'.E0'+episode,\r\n            'S0'+season+' E'+episode,\r\n            'S0'+season+' E0'+episode,\r\n            'S'+season+'E'+episode,\r\n            'S'+season+'E0'+episode,\r\n            'S'+season+'.E'+episode,\r\n            'S'+season+'.E0'+episode,\r\n            'S'+season+' E'+episode,\r\n            'S'+season+' E0'+episode\r\n        ];\r\n        let _title = _.replace(TVShow_name, ' ','.');\r\n        let _error = true;\r\n        _.forEach(links, (element)=>{\r\n            if(element.title.indexOf(TVShow_name) !== -1 || element.title.indexOf(_title) !== -1){\r\n                _.forEach(_error_title, (e, i)=>{\r\n                    if(element.title.indexOf(e) !== -1){\r\n                        _error=false;\r\n                    }\r\n                });\r\n                if(!_error){\r\n                    if(element.title.indexOf('Page') === -1 && element.title.indexOf('Search') === -1){\r\n                        _links.push(element);\r\n                    }\r\n                }else{\r\n                     _error=true;\r\n                }\r\n            }\r\n        });\r\n        return _links;\r\n    }\r\n    protected groups_release(links){\r\n        let _links = links;\r\n        let _group_list = [\r\n            'avs',\r\n            'bajskorv',\r\n            'batv',\r\n            'ctrlhd',\r\n            'd-zon3',\r\n            'dimension',\r\n            'fleet',\r\n            'fum',\r\n            'form',\r\n            'hevc',\r\n            'immerse',\r\n            'killers',\r\n            'lol',\r\n            'ntb',\r\n            'river',\r\n            'shaanig',\r\n            'sva',\r\n            'xander'];\r\n        _.forEach(_links, (element, index)=>{\r\n            _.forEach(_group_list, (group)=>{\r\n                let title : string = _.lowerCase(element.title);\r\n                let grupo : string = group;\r\n                if(title.indexOf(grupo) !== -1){\r\n                    _links[index][\"group\"] = grupo;\r\n                }\r\n            });\r\n        });\r\n        return _links;\r\n    }\r\n    protected get_resolution(links){\r\n        let _links = [];\r\n        _.forEach(links, (element, index)=>{\r\n            if(element.href.indexOf('1080')!==-1){\r\n                let e = element;\r\n                e['res'] = '1080';\r\n                _links.push(e);\r\n            }else{\r\n                if(element.href.indexOf('720')!==-1){\r\n                    let e = element;\r\n                    e['res'] = '720';\r\n                    _links.push(e);\r\n                }else{\r\n                    _links.push(element);\r\n                }\r\n            }\r\n        });\r\n        return _links;\r\n    }\r\n    protected delete_duplicate(links){\r\n        let _links = links;\r\n        let _finale_links = [];\r\n        _.forEach(_links, (element, index)=>{\r\n            if(_finale_links.length===0){\r\n                _finale_links.push(element);\r\n            }else{\r\n                var link_splited = _.split(element.href, '/'); \r\n                var link_id = link_splited[4];\r\n                var counter = 0;\r\n                _.forEach(_finale_links, (e, i)=>{\r\n                    var finale_link = _.split(e.href, '/'); \r\n                    var finale_link_id = finale_link[4];\r\n                    if(finale_link_id === link_id){\r\n                        counter++;\r\n                    }\r\n                });\r\n                if(counter===0){\r\n                    _finale_links.push(element);\r\n                }\r\n            }\r\n        });\r\n        return _finale_links;\r\n    }\r\n    protected torrent_link(links){\r\n        let _links = [];        \r\n        _.forEach(links, (element, index)=>{\r\n            let e = element;\r\n            var link_splited = _.split(element.href, '/'); \r\n            if(link_splited[3] === 'torrent_download' || link_splited[3] === 'torrent' || link_splited[3] === 'torrent_files' || link_splited[3] === 'torrent_trackers'){\r\n                e[\"torrent\"] = link_splited[0]+'//'+link_splited[2]+'/download/'+link_splited[4]+'/'+link_splited[5];\r\n            }\r\n            _links.push(e);\r\n        });\r\n        return _links;\r\n    } \r\n    protected get_info_torrents(links){\r\n        let _links = [];\r\n        let subject = new Rx.Subject();\r\n        var cont = 0;\r\n        var tam = links.length;\r\n \r\n        _.forEachRight(links, (element, index)=>{\r\n            let _link = _.replace(element.torrent, '/download/','/torrent/');\r\n            var e = element;\r\n            var options = {\r\n                url: _link,\r\n                method: 'GET'\r\n            };\r\n            request(options, (error, response, html)=>{\r\n                if(!error){\r\n                    var $ = cheerio.load(html);\r\n                    var err = $('h1.error').text();\r\n                    if(err.length===0){\r\n                        var info_torrent = {};\r\n                        $('td.tabledata0').filter(function(i){\r\n                            if(i===4){ //línea 4 de la página\r\n                                var data = $(this).text();\r\n                                data = _.lowerCase(data);\r\n                                data = _.replace(data, ' update', '');\r\n                                var info = _.split(data, ' ');\r\n                                info_torrent[\"seeds\"] = info[1];\r\n                                info_torrent[\"leechers\"] = info[3];\r\n                            }\r\n                            return true;\r\n                        });\r\n                        $('td.tabledata0').filter(function(i){\r\n                            if(i===5){ //línea 5 de la página\r\n                                if($(this).text().indexOf('MB') !== -1 || $(this).text().indexOf('GB') !== -1){\r\n                                    info_torrent[\"size\"] = $(this).text();\r\n                                }\r\n                            }\r\n                            if(i===6){\r\n                                if($(this).text().indexOf('MB') !== -1 || $(this).text().indexOf('GB') !== -1){\r\n                                    info_torrent[\"size\"] = $(this).text();\r\n                                }\r\n                            }\r\n                            return true;\r\n                        });\r\n                        e[\"info_torrent\"] = info_torrent;\r\n                        _links.push(e);\r\n                        if(cont === tam-1){\r\n                            subject.next(_links);\r\n                        }\r\n                        cont++;\r\n                    }else{\r\n                        if(cont === tam-1){\r\n                            subject.next(_links);\r\n                        }\r\n                        cont++;\r\n                    }\r\n                }else{\r\n                    console.log('*******');\r\n                    console.log(element);\r\n                    console.log('error get_info_torrents: '+error);\r\n                }\r\n            });\r\n        });\r\n        return subject;\r\n    }\r\n    protected format_links(links){\r\n        let _links = [];\r\n        _.forEachRight(links, (element, index)=>{\r\n                    if(_links.length===0){\r\n                      _links.push({\r\n                        group:element.group,\r\n                        data:[\r\n                          {\r\n                          title:element.title,\r\n                          description:element.description,\r\n                          href:element.href,\r\n                          group:element.group,\r\n                          info_torrent:element.info_torrent,\r\n                          link:element.link,\r\n                          res:element.res,\r\n                          torrent:element.torrent\r\n                          }\r\n                        ]\r\n                      });\r\n                    }else{\r\n                      let pos = _.findIndex(_links, {'group':element.group});\r\n                      if(pos>-1){\r\n                        _links[pos].data.push({\r\n                          title:element.title,\r\n                          description:element.description,\r\n                          href:element.href,\r\n                          group:element.group,\r\n                          info_torrent:element.info_torrent,\r\n                          link:element.link,\r\n                          res:element.res,\r\n                          torrent:element.torrent\r\n                        });\r\n                      }else{\r\n                        _links.push({\r\n                        group:element.group,\r\n                        data:[\r\n                          {\r\n                          title:element.title,\r\n                          description:element.description,\r\n                          href:element.href,\r\n                          group:element.group,\r\n                          info_torrent:element.info_torrent,\r\n                          link:element.link,\r\n                          res:element.res,\r\n                          torrent:element.torrent\r\n                          }\r\n                        ]\r\n                      });\r\n                      }\r\n                    }\r\n                });\r\n        return _links;\r\n    }\r\n    protected get_queries_for_subs(links, TVShow_name:string, season: number, episode: number){\r\n        let subject = new Rx.Subject();\r\n        let list_query = this.create_query(links,TVShow_name,season,episode);\r\n        let _self = this;\r\n        let cont = 0;\r\n        _.forEach(list_query,(element,index)=>{\r\n            \r\n            setTimeout(()=>{\r\n                google(element.query,function(err, res){\r\n                    element['links']=[];\r\n                    if(!err){\r\n                        let _subs_links = _self.clean_subs_list(res.links,TVShow_name,season,episode);\r\n                        element.links = _subs_links;\r\n                        if(cont===list_query.length-1){\r\n                            subject.next(list_query);\r\n                        }\r\n                        cont++;\r\n                    }else{\r\n                        if(cont===list_query.length-1){\r\n                            subject.next(list_query);\r\n                        }\r\n                        cont++;\r\n                    }\r\n                });\r\n            },1000);\r\n        });\r\n        return subject;\r\n    }\r\n    protected get_subs_links(list_query){\r\n        let subject = new Rx.Subject();\r\n        let _links = list_query;\r\n        let _total_links_count = 0;\r\n        let _counter = 0;\r\n        _.forEach(_links, (element, index)=>{\r\n            _total_links_count += element.links.length;\r\n        });\r\n        _.forEach(_links,(element,index)=>{\r\n            if(element.links.length>0){\r\n                _.forEach(element.links,(e, i)=>{\r\n                    request(e.href, function(error, response, html){\r\n                        if(!error){\r\n                            var $ = cheerio.load(html, {\r\n                                        normalizeWhitespace: false,\r\n                                        xmlMode: false,\r\n                                        decodeEntities: true\r\n                                    });\r\n                            let sub = {};\r\n                            $('#detalle_datos').filter(function(){\r\n                                e[\"sub_desc\"] = $(this).find('font').text();\r\n                                e[\"sub_link\"] = $(this).find('a.link1').attr('href');\r\n                                // e['sub'] = [];\r\n                                // e.sub.push(sub);\r\n                                return true;\r\n                            });\r\n                            if(_counter === _total_links_count-1){\r\n                                subject.next(_links);\r\n                            }\r\n                            _counter++;\r\n                        }else{\r\n                            if(_counter === _total_links_count-1){\r\n                                subject.next(_links);\r\n                            }\r\n                            _counter++;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        return subject;\r\n    }\r\n    protected clean_subs_list(links, TVShow_name:string, season: number, episode: number){\r\n        let _links = [];\r\n        let _error_href = [\r\n            'index.php',\r\n            'X5X-subtitulos',\r\n            'X46X-sub',\r\n            '?pg'];\r\n        let _error_title = [\r\n            'Página',\r\n            'pagina',\r\n            'página'];\r\n        _.forEachRight(links,(element, index)=>{\r\n            //check _error_href\r\n            if(element.href.length>23){\r\n                let _isErrorHref : boolean = false;\r\n                _.forEach(_error_href, (e, i)=>{\r\n                    if(element.href.indexOf(e)!==-1){\r\n                        _isErrorHref = true;\r\n                    }\r\n                });\r\n                //check _error_title\r\n            let _isErrorTitle : boolean = false;\r\n                _.forEach(_error_title, (e, i)=>{\r\n                    if(element.title.indexOf(e)!==-1){\r\n                        _isErrorTitle = true;\r\n                    }\r\n                });\r\n                //if double check true -> push\r\n                if(!_isErrorHref && !_isErrorTitle){\r\n                    _links.push(element);\r\n                }\r\n            }\r\n        });\r\n        _links = _.uniqBy(_links,'href');\r\n        return _links\r\n    }\r\n    protected create_query(links, TVShow_name:string, season: number, episode: number){\r\n        let query = '';\r\n        let list_query = [];\r\n        if(season<=9 && episode<=9){\r\n            query = TVShow_name+' S0'+season+'E0'+episode;\r\n        }else if(season<=9 && episode>9){\r\n            query = TVShow_name+' S0'+season+'E'+episode;\r\n        }\r\n        else if(season>9 && episode<=9){\r\n            query = TVShow_name+' S'+season+'E0'+episode;\r\n        }\r\n        else if(season>9 && episode>9){\r\n            query = TVShow_name+' S'+season+'E'+episode;\r\n        }\r\n        _.forEachRight(links, (element, index)=>{\r\n            if(typeof element.group !== 'undefined'){\r\n                _.forEachRight(element.data, (e, i)=>{\r\n                    if(typeof e.res !== 'undefined'){\r\n                        let _query = query+' '+e.res+' '+element.group+' site:subdivx.com';\r\n                        let index = _.findIndex(list_query,{'query':_query});\r\n                        if(index===-1){\r\n                            list_query.push({\r\n                                query: _query,\r\n                                res: e.res,\r\n                                group: element.group\r\n                            });\r\n                        }\r\n                    }else{\r\n                        let _query = query+' '+element.group+' site:subdivx.com';\r\n                        let index = _.findIndex(list_query,{'query':_query});\r\n                        if(index===-1){\r\n                            list_query.push({\r\n                                query: _query,\r\n                                group: element.group\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }else{\r\n                _.forEachRight(element.data, (e, i)=>{\r\n                    if(typeof e.res !== 'undefined'){\r\n                        let _query = query+' '+e.res+' site:subdivx.com';\r\n                        let index = _.findIndex(list_query,{'query':_query});\r\n                        if(index===-1){\r\n                            list_query.push({\r\n                                query: _query,\r\n                                res: e.res\r\n                            });\r\n                        }\r\n                    }else{\r\n                        let _query = query+' site:subdivx.com';\r\n                        let index = _.findIndex(list_query,{'query':_query});\r\n                        if(index===-1){\r\n                            list_query.push({\r\n                                query: _query\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return list_query;\r\n    }\r\n}"]}