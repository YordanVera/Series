{"version":3,"sources":["../../source/server/router/routes/links/thepiratebay.ts"],"names":[],"mappings":"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","file":"thepiratebay.js","sourcesContent":["import * as _           from 'lodash';\r\nimport * as request     from 'request';\r\nimport * as cheerio     from 'cheerio';\r\nimport * as Rx          from 'rxjs/Rx';\r\nvar PirateBay = require('thepiratebay');\r\n\r\nexport class thepiratebay {\r\n    constructor(){}\r\n    public search(TVShow_name: string, season: number, episode: number){\r\n        let subject = new Rx.Subject();\r\n        let query = this.create_query(TVShow_name, season, episode);\r\n        PirateBay.search(query, {category: 208})\r\n                .then(results => {\r\n                    _.forEach(results, (e)=>{\r\n                        e['site'] = 'The Pirate Bay';\r\n                    });\r\n                    results = this.delete_duplicate(results);\r\n                    if(results.length>0){\r\n                        subject.next(results);\r\n                    }else{\r\n                        subject.next('no data');\r\n                    }\r\n                    \r\n                })\r\n                .catch(err => console.log(err))\r\n        return subject;\r\n    }\r\n    protected create_query(TVShow_name: string, season: number, episode: number){\r\n        let cap = '';\r\n        if(season<=9 && episode<=9){\r\n            cap = 'S0'+season+'E0'+episode;\r\n        }else if(season<=9 && episode>9){\r\n            cap = 'S0'+season+'E'+episode;\r\n        }\r\n        else if(season>9 && episode<=9){\r\n            cap = 'S'+season+'E0'+episode;\r\n        }\r\n        else if(season>9 && episode>9){\r\n            cap = 'S'+season+'E'+episode;\r\n        }\r\n        return TVShow_name+' '+cap;\r\n    }\r\n    protected delete_duplicate(links){\r\n        let _links = [];\r\n        _.forEach(links, (element, index)=>{\r\n            if(_links.length<1){\r\n                _links.push(element);\r\n            }else{\r\n                let idx_element = _.findIndex(_links,{id:element.id});\r\n                if(idx_element===-1){\r\n                    _links.push(element);\r\n                }\r\n            }\r\n        });\r\n        return _links;\r\n    }\r\n};\r\n"]}