{"version":3,"sources":["../router/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\r\nimport * as express from 'express';\r\nimport * as mysql from 'mysql';\r\nimport * as tvshowRoutes from './routes/tvshow';\r\nimport {config_db} from '../config/config_db';\r\nimport {config_tmdb} from '../config/config_tmdb';\r\nimport * as path from 'path';\r\n\r\nlet pool = mysql.createPool(config_db);\r\nlet router = express.Router();\r\n\r\nrouter.get('/', (req, res) => {\r\n    res.sendFile(path.resolve('../build/client/').replace(/\\\\/g, '/'), 'index.html');\r\n});\r\n\r\nrouter.get('/list_tvshows', (req, res) => {\r\n    if(!req.body){\r\n        return res.sendStatus(400);\r\n    }else{\r\n        pool.query('SELECT id_serie, nombre FROM series', (error, rows, fields) => {\r\n            if (error) return res.json({success: false, error: error});\r\n            return res.json({\r\n                success: true,\r\n                result: rows});\r\n        });\r\n    }\r\n});\r\n\r\nrouter.post('/add_tvshow', (req, res) => {\r\n    if(!req.body){\r\n        return res.sendStatus(400);\r\n    }else{\r\n        //db add\r\n        pool.query('INSERT INTO series (nombre) VALUES (?)', [req.body.nombre], (error, result) => {\r\n            if (error) return res.json({success: false, error: error});\r\n            return res.json({\r\n                success: true,\r\n                id_serie: result.insertId\r\n            });\r\n        });\r\n    }\r\n});\r\n\r\nrouter.delete('/del_tvshow/:id_serie',(req, res) => {\r\n    if(!req.params){\r\n        return res.sendStatus(400);\r\n    }else{\r\n        //db del\r\n        pool.query('DELETE FROM series WHERE id_serie = ?', [req.params.id_serie], (error) => {\r\n            if (error) return res.json({success: false, error: error});\r\n            return res.json({success: true});\r\n        });\r\n    }\r\n});\r\n\r\nrouter.put('/update_tvshow',(req, res) => {\r\n    if(!req.body){\r\n        return res.sendStatus(400);\r\n    }else{\r\n        //db update\r\n        pool.query('UPDATE series SET nombre = ? WHERE id_serie = ?', [req.body.nombre, req.body.id_serie], (error) => {\r\n            if (error) return res.json({success: false, error: error});\r\n            return res.json({success:true});\r\n        });\r\n    }\r\n});\r\nexport = router;"]}