{"version":3,"sources":["../server/router/index.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,IAAY,OAAO,WAAM,SAAS,CAAC,CAAA;AACnC,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAI/B,0BAAwB,qBAAqB,CAAC,CAAA;AAG9C,IAAI,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,qBAAS,CAAC,CAAC;AACvC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAE9B,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,GAAG;IACrB,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,eAAe,EAAE,UAAC,GAAG,EAAE,GAAG;IACjC,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA,CAAC;QACV,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAAA,IAAI,CAAA,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,qCAAqC,EAAE,UAAS,GAAG,EAAE,IAAI,EAAE,MAAM;YACxE,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,GAAG,CAAC;YACnB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,UAAC,GAAG,EAAE,GAAG;IAChC,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA,CAAC;QACV,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAAA,IAAI,CAAA,CAAC;QACF,QAAQ;QACR,GAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;IAC9B,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,aAAa,EAAC,UAAC,GAAG,EAAE,GAAG;IAC/B,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA,CAAC;QACV,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAAA,IAAI,CAAA,CAAC;QACF,QAAQ;QACR,GAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;IAC9B,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAC,UAAC,GAAG,EAAE,GAAG;IAClC,EAAE,CAAA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA,CAAC;QACV,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAAA,IAAI,CAAA,CAAC;QACF,WAAW;QACX,GAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;IAC9B,CAAC;AACL,CAAC,CAAC,CAAC;AACH,iBAAS,MAAM,CAAC","file":"index.js","sourcesContent":["\"use strict\";\r\n\r\nimport * as express from 'express';\r\nimport * as mysql from 'mysql';\r\n\r\nimport * as tvshowRoutes from './routes/tvshow';\r\n\r\nimport {config_db} from '../config/config_db';\r\nimport {config_tmdb} from '../config/config_tmdb';\r\n\r\nlet pool = mysql.createPool(config_db);\r\nlet router = express.Router();\r\n\r\nrouter.get('/', (req, res) => {\r\n    res.sendFile('./build/client', 'index.html');\r\n});\r\n\r\nrouter.get('/list_tvshows', (req, res) => {\r\n    if(!req.body){\r\n        return res.sendStatus(400);\r\n    }else{\r\n        pool.query('SELECT id_serie, nombre FROM series', function(err, rows, fields) {\r\n            if (err) throw err;\r\n            return res.json(rows);\r\n        });\r\n    }\r\n});\r\n\r\nrouter.post('/add_tvshow', (req, res) => {\r\n    if(!req.body){\r\n        return res.sendStatus(400);\r\n    }else{\r\n        //db add\r\n        res.json({success: true});\r\n    }\r\n});\r\n\r\nrouter.post('/del_tvshow',(req, res) => {\r\n    if(!req.body){\r\n        return res.sendStatus(400);\r\n    }else{\r\n        //db del\r\n        res.json({success: true});\r\n    }\r\n});\r\n\r\nrouter.post('/update_tvshow',(req, res) => {\r\n    if(!req.body){\r\n        return res.sendStatus(400);\r\n    }else{\r\n        //db update\r\n        res.json({success: true});\r\n    }\r\n});\r\nexport = router;"]}