{"version":3,"sources":["../../source/client/app/header/header.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA6D,eAAe,CAAC,CAAA;AAC7E,yBAA6D,mBAAmB,CAAC,CAAA;AACjF,oCAA6D,uBAAuB,CAAC,CAAA;AACrF,gCAA6D,4BAA4B,CAAC,CAAA;AAC1F,sBAA6D,kBAAkB,CAAC,CAAA;AAOhF;IAII,yBACW,MAAgB,EAChB,gBAAkC,EACjC,OAAsB;QAFvB,WAAM,GAAN,MAAM,CAAU;QAChB,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,YAAO,GAAP,OAAO,CAAe;IAC1B,CAAC;IACT,kCAAQ,GAAR,cAAY,CAAC;IACb,uCAAa,GAAb;QAAA,iBAgBC;QAfG,IAAI,MAAM,GAAG,IAAI,yBAAc,EAAE,CAAC;QAClC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAEhD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wCAAkB,EAAE,MAAM,CAAC,CAAC;QAE9D,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAA,MAAM;YACzC,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC;YAC9B,EAAE,CAAA,CAAC,KAAI,CAAC,eAAe,CAAC,CAAA,CAAC;gBACrB,IAAI,OAAK,GAAG,IAAI,aAAK,EAAE,CAAC;gBACxB,OAAK,CAAC,IAAI,GAAC,KAAK,CAAC;gBACjB,OAAK,CAAC,IAAI,GAAC,EAAC,IAAI,EAAC,KAAI,CAAC,eAAe,EAAC,CAAC;gBACvC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAK,CAAC,CAAC;YAC7B,CAAC;YACD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IA/BL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAM,MAAM,CAAC,EAAE;YACvB,QAAQ,EAAM,WAAW;YACzB,WAAW,EAAG,yBAAyB;SAC1C,CAAC;;uBAAA;IA4BF,sBAAC;AAAD,CA3BA,AA2BC,IAAA;AA3BY,uBAAe,kBA2B3B,CAAA","file":"header.component.js","sourcesContent":["import { Component, OnInit, ViewContainerRef, Input }   from '@angular/core';\r\nimport { MdDialog, MdDialogConfig, MdDialogRef }        from '@angular/material';\r\nimport { newDialogComponent }                           from './newDialog.component';\r\nimport { EmitterService }                               from '../emitter/emitter.service';\r\nimport { Event }                                        from '../emitter/event';\r\n\r\n@Component({\r\n    moduleId    : module.id,\r\n    selector    : 'headerETV',\r\n    templateUrl : './header.component.html'\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n    dialogRef: MdDialogRef<newDialogComponent>;\r\n    lastCloseResult: string;\r\n\r\n    constructor(\r\n        public dialog: MdDialog,\r\n        public viewContainerRef: ViewContainerRef,\r\n        private emitter:EmitterService\r\n        ){  }\r\n    ngOnInit(){ }\r\n    openNewDialog() {\r\n        let config = new MdDialogConfig();\r\n        config.viewContainerRef = this.viewContainerRef;\r\n\r\n        this.dialogRef = this.dialog.open(newDialogComponent, config);\r\n\r\n        this.dialogRef.afterClosed().subscribe(result => {\r\n            this.lastCloseResult = result;\r\n            if(this.lastCloseResult){\r\n                let event = new Event();\r\n                event.type=\"new\";\r\n                event.data={name:this.lastCloseResult};\r\n                this.emitter.emit(event);\r\n            }\r\n            this.dialogRef = null;\r\n      });\r\n    }\r\n}"]}