{"version":3,"sources":["../../source/client/app/body/detail/status.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyD,eAAe,CAAC,CAAA;AACzE,qBAAyD,eAAe,CAAC,CAAA;AACzE,2BAAyD,iBAAiB,CAAC,CAAA;AAI3E;IACI,uBAAoB,IAAW;QAAX,SAAI,GAAJ,IAAI,CAAO;IAAI,CAAC;IAE5B,mCAAW,GAAnB,UAAoB,KAAU;QAC1B,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;YAC5C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;QAExE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,yBAAyB;QAChD,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IACD,kCAAU,GAAV,UAAW,SAAkB,EAAE,MAAc;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAC,SAAS,GAAC,GAAG,GAAC,MAAM,CAAC;aACxC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IACD,qCAAa,GAAb,UAAc,MAAM;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAC,MAAM,CAAC;aACzB,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IACD,kCAAU,GAAV,UAAW,MAAM;QACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAC,MAAM,CAAC;aAC1B,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IAzBL;QAAC,iBAAU,EAAE;;qBAAA;IA0Bb,oBAAC;AAAD,CAzBA,AAyBC,IAAA;AAzBY,qBAAa,gBAyBzB,CAAA","file":"status.service.js","sourcesContent":["import { Injectable, EventEmitter }                 from '@angular/core';\r\nimport { Http, Headers, RequestOptions, Response }  from '@angular/http';\r\nimport { Observable }                               from 'rxjs/Observable';\r\nimport * as Rx                                      from \"rxjs/Rx\";\r\n\r\n@Injectable()\r\nexport class StatusService {\r\n    constructor(private http : Http){  }\r\n\r\n    private handleError(error: any){\r\n        let errMsg = (error.message) ? error.message :\r\n        error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n\r\n        console.error(errMsg); // log to console instead\r\n        return Observable.throw(errMsg);\r\n    }\r\n    get_status(id_tvshow : number, season: number){\r\n        return this.http.get('/get_status/'+id_tvshow+'/'+season)\r\n                        .map(res => res.json())\r\n                        .catch(this.handleError);\r\n    }\r\n    update_status(status){\r\n        return this.http.put('/put_status',status)\r\n                        .map(res => res.json())\r\n                        .catch(this.handleError);\r\n    }\r\n    add_status(status){\r\n        return this.http.post('/add_status',status)\r\n                        .map(res => res.json())\r\n                        .catch(this.handleError);\r\n    }\r\n}"]}