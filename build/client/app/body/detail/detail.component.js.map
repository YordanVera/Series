{"version":3,"sources":["../../source/client/app/body/detail/detail.component.ts"],"names":[],"mappings":"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","file":"detail.component.js","sourcesContent":["import { Component }                from '@angular/core';\r\nimport { ActivatedRoute, Params }   from '@angular/router';\r\nimport { Location }                 from '@angular/common';\r\nimport { CoverService }             from '../cover/cover.service';\r\nimport { StatusService }            from './status.service';\r\nimport { TVShow }                   from '../cover/tvshow';\r\nimport * as _                       from 'lodash';\r\n\r\n@Component({\r\n    moduleId    : module.id, \r\n    selector    : 'detail',\r\n    templateUrl : './detail.component.html',\r\n    providers   : [CoverService, StatusService]\r\n})\r\nexport class DetailComponent {\r\n    private TVShow  : TVShow;\r\n    private season_selected;\r\n    private _isLoading : boolean;\r\n    private _isLoadingDetail : boolean;\r\n    private _isSeasonSelected : boolean;\r\n    constructor(private route           : ActivatedRoute,\r\n                private location        : Location,\r\n                private coverService    : CoverService,\r\n                private statusService   : StatusService){\r\n                    this.TVShow = new TVShow;\r\n                    this._isLoading = this._isLoadingDetail = true;\r\n                    this._isSeasonSelected = false; \r\n                 }\r\n    \r\n    ngOnInit(): void {\r\n        this.route.params.forEach((params: Params) => {\r\n            let _data : any = params;\r\n            this.TVShow.name = _data.TVShow_name;\r\n            this.TVShow.id_tvshow = _data.id;\r\n        });\r\n        this.getDetail();\r\n    }\r\n    getDetail(){\r\n        this.coverService.get_TVShow_Detail(this.TVShow.name).subscribe(\r\n            data => {\r\n                this.TVShow.data = data.result;\r\n                this._isLoading = false;\r\n                this.getFullDetail(this.TVShow.data.id);\r\n            }\r\n        );\r\n    }\r\n    getFullDetail(id: number){\r\n        this.coverService.get_TVShow_Full_Detail(id).subscribe(\r\n            data => {\r\n                this.TVShow.data.full = data.result;\r\n                this._isLoadingDetail = false;\r\n            }\r\n        );\r\n    }\r\n    selectSeason(id:number, season_number:number){\r\n        this.coverService.get_Season_Detail(id,season_number).subscribe(\r\n            data => {\r\n                this.season_selected=data.result;\r\n                this._isSeasonSelected=true;\r\n                this.statusService.get_status(this.TVShow.id_tvshow, this.season_selected.season_number).subscribe(\r\n                    _result => {\r\n                        if(_result.success && _result.result.length>0){\r\n                            let check = _result.result;\r\n                            _.forEach(check, (element, index)=>{\r\n                                let idx = _.findIndex(this.season_selected.episodes, {episode_number:element.episode});\r\n                                if(idx>-1){\r\n                                    this.season_selected.episodes[idx]['id_status'] = element.id_status;\r\n                                    element.downloaded === 1 ? this.season_selected.episodes[idx]['downloaded'] = true : this.season_selected.episodes[idx]['downloaded'] = false;\r\n                                    element.viewed === 1 ? this.season_selected.episodes[idx]['viewed'] = true : this.season_selected.episodes[idx]['viewed'] = false;\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        );\r\n    }\r\n    changeStatus(op, event, cap, id_tvshow){\r\n        op === 1 ? cap.downloaded = event.checked: cap.downloaded=cap.downloaded;\r\n        op === 2 ? cap.viewed = event.checked: cap.viewed=cap.viewed;\r\n        if(cap.id_status>=0){\r\n            this.statusService.update_status({\r\n                downloaded  :cap.downloaded, \r\n                viewed      :cap.viewed,\r\n                id_status   :cap.id_status\r\n            }).subscribe(\r\n                data => {\r\n                }\r\n            );\r\n        }else{\r\n            this.statusService.add_status({\r\n                id_tvshow   :id_tvshow,\r\n                downloaded  :cap.downloaded, \r\n                viewed      :cap.viewed,\r\n                season      :cap.season_number,\r\n                episode     :cap.episode_number\r\n            }).subscribe(\r\n                data =>{\r\n                    if(data.success){\r\n                        cap.id_status = data.id_status;\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n}"]}