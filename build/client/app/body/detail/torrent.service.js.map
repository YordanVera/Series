{"version":3,"sources":["../../source/client/app/body/detail/torrent.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyD,eAAe,CAAC,CAAA;AACzE,qBAAyD,eAAe,CAAC,CAAA;AACzE,2BAAyD,iBAAiB,CAAC,CAAA;AAI3E;IACI,wBAAoB,IAAW;QAAX,SAAI,GAAJ,IAAI,CAAO;IAAI,CAAC;IAE5B,oCAAW,GAAnB,UAAoB,KAAU;QAC1B,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;YAC5C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;QAExE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,yBAAyB;QAChD,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IACD,qCAAY,GAAZ,UAAa,WAAoB,EAAE,MAAe,EAAE,OAAe;QAC/D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,GAAC,WAAW,GAAC,GAAG,GAAC,MAAM,GAAC,GAAG,GAAC,OAAO,CAAC;aACxD,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7C,CAAC;IAfL;QAAC,iBAAU,EAAE;;sBAAA;IAgBb,qBAAC;AAAD,CAfA,AAeC,IAAA;AAfY,sBAAc,iBAe1B,CAAA","file":"torrent.service.js","sourcesContent":["import { Injectable, EventEmitter }                 from '@angular/core';\r\nimport { Http, Headers, RequestOptions, Response }  from '@angular/http';\r\nimport { Observable }                               from 'rxjs/Observable';\r\nimport * as Rx                                      from \"rxjs/Rx\";\r\n\r\n@Injectable()\r\nexport class TorrentService {\r\n    constructor(private http : Http){  }\r\n\r\n    private handleError(error: any){\r\n        let errMsg = (error.message) ? error.message :\r\n        error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n\r\n        console.error(errMsg); // log to console instead\r\n        return Observable.throw(errMsg);\r\n    }\r\n    get_Torrents(TVShow_name : string, season : number, episode: number){\r\n        return this.http.get('/get_torrents/'+TVShow_name+'/'+season+'/'+episode)\r\n                        .map(res => res.json())\r\n                        .catch(this.handleError);\r\n    }\r\n}"]}