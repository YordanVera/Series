{"version":3,"sources":["../../source/client/app/body/cover/cover.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAqC,eAAe,CAAC,CAAA;AACrD,8BAAqC,iBAAiB,CAAC,CAAA;AACvD,uBAAqC,UAAU,CAAC,CAAA;AAChD,gCAAqC,+BAA+B,CAAC,CAAA;AAQrE;IAGI,wBAAoB,YAA0B,EAC1B,OAAuB;QADvB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,YAAO,GAAP,OAAO,CAAgB;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC;IACjC,CAAC;IACd,iCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAChC,CAAC;IACD,mCAAU,GAAV;QAAA,iBAUC;QATG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CACxC,UAAA,YAAY;YACR,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACjC,EAAE,CAAA,CAAC,OAAO,KAAI,CAAC,YAAY,CAAC,MAAM,KAAK,WAAW,CAAC,CAAA,CAAC;gBAChD,KAAI,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC;YAClC,CAAC;QACL,CAAC,EACD,UAAA,KAAK,IAAc,OAAA,KAAI,CAAC,WAAW,GAAQ,KAAK,EAA7B,CAA6B,CACnD,CAAC;IACN,CAAC;IACO,6CAAoB,GAA5B;QAAA,iBAcC;QAbG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAC/B,UAAA,KAAK;YACD,EAAE,CAAA,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,CAAA,CAAC;gBACrB,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpC,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAG,QAAQ,CAAC,CAAA,CAAC;gBAC5B,KAAI,CAAC,YAAY,EAAE,CAAC;YACxB,CAAC;YACD,IAAI,CAAC,EAAE,CAAA,CAAC,KAAK,CAAC,IAAI,KAAG,QAAQ,CAAC,CAAA,CAAC;gBAC3B,KAAI,CAAC,YAAY,EAAE,CAAC;YACxB,CAAC;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IACO,kCAAS,GAAjB,UAAkB,WAAW;QAA7B,iBAgBC;QAfG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,CAC/C,UAAA,MAAM;YACF,EAAE,CAAA,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA,CAAC;gBACf,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,SAAS,CACtD,UAAA,IAAI;oBACA,IAAI,UAAU,GAAG,IAAI,eAAM,EAAE,CAAC;oBAC9B,UAAU,CAAC,SAAS,GAAE,MAAM,CAAC,SAAS,CAAC;oBACvC,UAAU,CAAC,IAAI,GAAC,WAAW,CAAC;oBAC5B,UAAU,CAAC,IAAI,GAAC,IAAI,CAAC,MAAM,CAAC;oBAC5B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACvC,CAAC,CACJ,CAAC;YACN,CAAC;QACL,CAAC,CACJ,CAAC;IACN,CAAC;IACO,qCAAY,GAApB;IAEA,CAAC;IACO,qCAAY,GAApB;IAEA,CAAC;IAjEL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAM,MAAM,CAAC,EAAE;YACvB,QAAQ,EAAM,OAAO;YACrB,WAAW,EAAG,wBAAwB;YACtC,SAAS,EAAK,CAAC,4BAAY,CAAC;SAC/B,CAAC;;sBAAA;IA6DF,qBAAC;AAAD,CA5DA,AA4DC,IAAA;AA5DY,sBAAc,iBA4D1B,CAAA","file":"cover.component.js","sourcesContent":["import { Component, OnInit }    from '@angular/core';\r\nimport { CoverService }         from './cover.service';\r\nimport { TVShow }               from './tvshow';\r\nimport { EmitterService }       from '../../emitter/emitter.service';\r\nimport { Event }                from '../../emitter/event';\r\n@Component({\r\n    moduleId    : module.id, \r\n    selector    : 'cover',\r\n    templateUrl : './cover.component.html',\r\n    providers   : [CoverService]\r\n})\r\nexport class CoverComponent implements OnInit {\r\n    erroMessage : string;\r\n    list_tvshows : TVShow[];\r\n    constructor(private coverService: CoverService,\r\n                private emitter: EmitterService) { \r\n                    this.list_tvshows = new Array;\r\n                 }\r\n    ngOnInit(){\r\n        this.getTVShows();\r\n        this.listenEmitterService();\r\n    }\r\n    getTVShows(){\r\n        this.coverService.getAll_TVShows().subscribe(\r\n            list_tvshows    => {\r\n                this.list_tvshows = list_tvshows;\r\n                if(typeof this.list_tvshows.length === 'undefined'){\r\n                    this.list_tvshows = new Array;\r\n                }\r\n            },\r\n            error           => this.erroMessage = <any>error\r\n        );\r\n    }\r\n    private listenEmitterService(){\r\n        this.emitter.eventListen$.subscribe(\r\n            event => {\r\n                if(event.type === 'new'){\r\n                    this.newTVShow(event.data.name);\r\n                }\r\n                else if (event.type==='delete'){\r\n                    this.deleteTVShow();\r\n                }\r\n                else if(event.type==='update'){\r\n                    this.updateTVShow();\r\n                }\r\n            }\r\n        );\r\n    }\r\n    private newTVShow(TVShow_name){\r\n        this.coverService.new_TVShow(TVShow_name).subscribe(\r\n            result => { \r\n                if(result.success){             \r\n                    this.coverService.get_TVShow_Detail(TVShow_name).subscribe(\r\n                        data => {\r\n                            let newTV_Show = new TVShow();\r\n                            newTV_Show.id_tvshow= result.id_tvshow;\r\n                            newTV_Show.name=TVShow_name;\r\n                            newTV_Show.data=data.result;\r\n                            this.list_tvshows.push(newTV_Show);\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        );\r\n    }\r\n    private deleteTVShow(){\r\n\r\n    }\r\n    private updateTVShow(){\r\n\r\n    }\r\n}"]}